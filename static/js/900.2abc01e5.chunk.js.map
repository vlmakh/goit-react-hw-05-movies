{"version":3,"file":"static/js/900.2abc01e5.chunk.js","mappings":"iMACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAAgG,wBAAhG,EAAsI,0BAAtI,EAA2K,uB,iDCK5J,SAASA,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MAEf,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcN,EAAOO,SAASC,MAAK,SAAAC,GAEjCL,EAAQK,EAAKN,KACd,GACF,GAAE,CAACH,EAAOO,WAGT,+BACE,eAAIG,UAAWC,EAAf,SACGR,EAAKS,KAAI,SAAAC,GAAK,OACb,gBAAmBH,UAAWC,EAA9B,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXG,MAAM,MACNC,IACEF,EAAMG,aAAN,yCACsCH,EAAMG,cACxCC,EAENC,IAAKL,EAAMM,UAGf,cAAGT,UAAWC,EAAd,SAA6BE,EAAMM,SAb5BN,EAAMO,GADF,OAoBtB,C,sNCtCKC,EAAW,+BACXC,EAAU,mCAIVC,EAAW,mCAAG,oGAIKC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,qCACmBC,EADnB,YAJL,cAIZG,EAJY,yBAOXA,EAAShB,MAPE,2CAAH,qDAUXiB,EAAW,mCAAG,WAAOC,EAAOC,GAAd,uFAIKJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCK,EADhC,gCAC6DC,EAD7D,yBAJL,cAIZH,EAJY,yBAOXA,EAAShB,MAPE,2CAAH,wDAUXoB,EAAc,mCAAG,WAAMT,GAAN,uFAIEI,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,oBACcE,EADd,wCAJF,cAIfG,EAJe,yBAOdA,EAAShB,MAPK,2CAAH,sDAUdH,EAAa,mCAAG,WAAMc,GAAN,uFAIGI,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,4BACsBE,EADtB,oBAJH,cAIdG,EAJc,yBAObA,EAAShB,MAPI,2CAAH,sDAUbqB,EAAgB,mCAAG,WAAMV,GAAN,uFAIAI,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,4BACsBE,EADtB,2BAJA,cAIjBG,EAJiB,yBAOhBA,EAAShB,MAPO,2CAAH,sDAkBtBiB,EAAYK,UAAY,CACtBJ,MAAOK,IAAAA,OACPJ,KAAMI,IAAAA,QAGRH,EAAeE,UAAY,CACzBX,GAAIY,IAAAA,QAGN1B,EAAcyB,UAAY,CACxBX,GAAIY,IAAAA,QAGNF,EAAiBC,UAAY,CAC3BX,GAAIY,IAAAA,O","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castCard\":\"Cast_castCard__m8Shz\",\"cast__img\":\"Cast_cast__img__IB6ux\",\"cast__thumb\":\"Cast_cast__thumb__Xifrb\",\"castName\":\"Cast_castName__-i08u\"};","import css from './Cast.module.css';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastById } from 'services/api';\nimport imageplaceholder from 'images/nophoto.jpg';\n\nexport default function Cast() {\n  const params = useParams();\n  // console.log(params);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCastById(params.movieId).then(data => {\n      // console.log(data.cast);\n      setCast(data.cast);\n    });\n  }, [params.movieId]);\n\n  return (\n    <>\n      <ul className={css.castList}>\n        {cast.map(actor => (\n          <li key={actor.id} className={css.castCard}>\n            <div className={css.cast__thumb}>\n              <img\n                className={css.cast__img}\n                width=\"100\"\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                    : imageplaceholder\n                }\n                alt={actor.name}\n              />\n            </div>\n            <p className={css.castName}>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n\nconst fetchTrends = async () => {\n  // return fetch(`${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`).then(\n  //   response => response.json()\n  // );\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page) => {\n  // return fetch(\n  //   `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async id => {\n  // return fetch(\n  //   `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  // return fetch(\n  //   `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  // return fetch(\n  //   `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["Cast","params","useParams","useState","cast","setCast","useEffect","fetchCastById","movieId","then","data","className","css","map","actor","width","src","profile_path","imageplaceholder","alt","name","id","MAIN_URL","API_KEY","fetchTrends","axios","response","fetchMovies","query","page","fetchMovieById","fetchReviewsById","propTypes","PropTypes"],"sourceRoot":""}