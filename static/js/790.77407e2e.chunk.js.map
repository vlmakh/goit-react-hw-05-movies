{"version":3,"file":"static/js/790.77407e2e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.js","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie__img\":\"MovieCard_movie__img__Y1i+g\",\"movie__thumb\":\"MovieCard_movie__thumb__ESWNm\",\"movie__title\":\"MovieCard_movie__title__Lfihi\"};","import css from './MovieCard.module.css';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { Box } from 'components/Box/Box';\n\nexport const MovieCard = ({ movie, location }) => {\n  return (\n    <Box width=\"160px\" background=\"#bcc3ce\" height=\"100%\">\n      <div className={css.movie__thumb}>\n        <img\n          className={css.movie__img}\n          width=\"160\"\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n              : imageplaceholder\n          }\n          alt={movie.title ?? movie.name}\n        />\n      </div>\n      <p className={css.movie__title}>{movie.title ?? movie.name}</p>\n    </Box>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Movies_search__VjLZn\",\"search__btn\":\"Movies_search__btn__bt5MA\",\"moviesList\":\"Movies_moviesList__lstJL\"};","import css from './Movies.module.css';\nimport { Link } from 'react-router-dom';\nimport { Box } from 'components/Box/Box';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\nexport default function Movies() {\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('search') ?? '';\n  const [input, setInput] = useState(query ? query : '');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchMovies(query, page).then(data => {\n      if (!data.results.length) {\n        alert('No results found due to your search inquiry');\n      } else {\n        // setMoviesFound(prevState => {\n        //   return [...prevState, ...data.results];\n        // });\n        setMoviesFound([...data.results]);\n      }\n    });\n  }, [page, query]);\n\n  const onSearchInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim() === '') {\n      return alert('Empty query. Please input something for search');\n    }\n    if (input.trim() !== query) {\n      setPage(1);\n      setMoviesFound([]);\n      setSearchQuery({ search: input });\n    }\n  };\n\n  // const loadMore = () => {\n  //   setPage(prevPage => prevPage + 1);\n  // };\n\n  const searchRoute = `${location.pathname}${location.search}`;\n\n  return (\n    <Box p={4} textAlign=\"center\" mt=\"48px\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={onSearchInput}\n          className={css.search}\n        />\n        <button type=\"submit\" className={css.search__btn}>\n          Search\n        </button>\n      </form>\n\n      <ul className={css.moviesList}>\n        {moviesFound.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: searchRoute }}>\n              <MovieCard movie={movie} />\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      <Outlet />\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n\nconst fetchTrends = async () => {\n  // return fetch(`${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`).then(\n  //   response => response.json()\n  // );\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page) => {\n  // return fetch(\n  //   `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async id => {\n  // return fetch(\n  //   `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  // return fetch(\n  //   `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  // return fetch(\n  //   `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["MovieCard","movie","location","Box","width","background","height","className","css","src","poster_path","imageplaceholder","alt","title","name","Movies","useState","moviesFound","setMoviesFound","page","setPage","useSearchParams","searchQuery","setSearchQuery","query","get","input","setInput","useLocation","useEffect","fetchMovies","then","data","results","length","alert","searchRoute","pathname","search","p","textAlign","mt","onSubmit","event","preventDefault","trim","type","value","onChange","target","map","to","id","state","from","MAIN_URL","API_KEY","fetchTrends","axios","response","fetchMovieById","fetchCastById","fetchReviewsById","propTypes","PropTypes"],"sourceRoot":""}