{"version":3,"file":"static/js/75.34c0d6ed.chunk.js","mappings":"kNAGaA,GAAmBC,EAAAA,EAAAA,GAAOC,IAAPD,CAAH,8eAKd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IAQH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,IAKC,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,MAAnB,IAKH,SAAAN,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,MAAnB,G,oLChBC,SAASC,EAAT,GAAgC,IAAhBC,EAAe,EAAfA,YAC7B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAcC,OAAOH,EAAYI,IAAI,SACvCD,OAAOH,EAAYI,IAAI,SACvB,GAEJC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYf,EAAaW,GACtBK,MAAK,SAAAC,GACJd,EAAUc,EAAKC,SACfb,EAAcY,EAAKE,YACpB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACrB,EAAaW,EAAaD,IAO9B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UACmB,UAAhBV,EAA0B,0GAAuB,oBAGpD,SAAC,KAAD,UACGE,EAAOsB,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,WACE,SAAC,KAAD,CAASC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAlD,UACE,SAAC,IAAD,CAAWwB,MAAOL,OAFXA,EAAME,GADF,MASlBvB,EAAa,IACZ,SAAC,IAAD,CACE2B,WAAW,MACXC,UAAU,IACVC,aAzBgB,SAAAC,GAEtBxB,EAAe,CAAEyB,KAAMD,EAAEE,SAAW,GACrC,EAuBOC,mBAAoB,EACpBC,UAAWlC,EACXmC,cAAc,IACdC,sBAAuB,KACvBC,sBAAsB,WACtBC,gBAAgB,aAChBC,UAAWhC,EAAc,MAKlC,C","sources":["components/Pagination/Pagination.jsx","pages/Home/Home.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  margin-top: 16px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: 700;\n\n  @media (max-width: 479.98px) {\n    flex-wrap: wrap;\n  }\n\n  & li {\n    color: ${p => p.theme.colors.textPrimary};\n\n    transition: color 250ms linear;\n\n    :hover:not(.disabled) {\n      color: ${p => p.theme.colors.accent};\n    }\n  }\n\n  & .activePage {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  & a {\n    padding: 0 8px;\n    cursor: pointer;\n  }\n\n  & a.disabled {\n    cursor: default;\n  }\n`;\n","import { PageWrap } from 'components/Box/Box';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchTrends } from 'services/api';\nimport { PageTitle, List, Item } from './Home.styled';\nimport 'index.css';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { PaginationStyled } from 'components/Pagination/Pagination';\nimport PropTypes from 'prop-types';\n\nexport default function Home({ currentLang }) {\n  const [trends, setTrends] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const currentPage = Number(searchQuery.get('page'))\n    ? Number(searchQuery.get('page'))\n    : 1;\n\n  useEffect(() => {\n    fetchTrends(currentLang, currentPage)\n      .then(data => {\n        setTrends(data.results);\n        setTotalPages(data.total_pages);\n      })\n      .catch(error => console.log(error));\n  }, [currentLang, currentPage, setSearchQuery]);\n\n  const handlePageClick = e => {\n    // console.log(e);\n    setSearchQuery({ page: e.selected + 1 });\n  };\n\n  return (\n    <PageWrap>\n      <PageTitle>\n        {currentLang === 'uk-UA' ? 'Популярні сьогодні' : 'Trending Today'}\n      </PageTitle>\n\n      <List>\n        {trends.map(trend => (\n          <Item key={trend.id}>\n            <NavLink to={`movies/${trend.id}`} state={{ from: location }}>\n              <MovieCard movie={trend} />\n            </NavLink>\n          </Item>\n        ))}\n      </List>\n\n      {totalPages > 1 && (\n        <PaginationStyled\n          breakLabel=\"...\"\n          nextLabel=\">\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={5}\n          pageCount={totalPages}\n          previousLabel=\"<\"\n          renderOnZeroPageCount={null}\n          disabledLinkClassName=\"disabled\"\n          activeClassName=\"activePage\"\n          forcePage={currentPage - 1}\n        />\n      )}\n    </PageWrap>\n  );\n}\n\nHome.propTypes = {\n  currentLang: PropTypes.string.isRequired,\n};\n"],"names":["PaginationStyled","styled","ReactPaginate","p","theme","fontSizes","s","colors","textPrimary","accent","Home","currentLang","useState","trends","setTrends","totalPages","setTotalPages","location","useLocation","useSearchParams","searchQuery","setSearchQuery","currentPage","Number","get","useEffect","fetchTrends","then","data","results","total_pages","catch","error","console","log","map","trend","to","id","state","from","movie","breakLabel","nextLabel","onPageChange","e","page","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","disabledLinkClassName","activeClassName","forcePage"],"sourceRoot":""}