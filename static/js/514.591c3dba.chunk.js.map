{"version":3,"file":"static/js/514.591c3dba.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  margin-top: ${p => p.theme.space[4]}px;\n  /* padding-top: ${p => p.theme.space[3]}px; */\n  list-style: none;\n`;\n\nexport const ReviewAuthor = styled.h4`\n  margin-top: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.textPrimary};\n`;\n\nexport const ReviewText = styled.p`\n  margin-top: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.xs};\n  color:  ${p => p.theme.colors.textPrimary};\n`;\n\nexport const ReviewNot = styled.p`\n  padding-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.textPrimary};\n`;\n","import {\n  ReviewList,\n  ReviewAuthor,\n  ReviewText,\n  ReviewNot,\n} from './Reviews.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'services/api';\n\nexport default function Reviews({ currentLang }) {\n  const params = useParams();\n  //   console.log(params);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviewsById(params.movieId, currentLang).then(data => {\n      // console.log(data.results);\n      setReviews(data.results);\n    });\n  }, [currentLang, params.movieId]);\n\n  return (\n    <>\n      {!reviews.length ? (\n        <ReviewNot>\n          {currentLang === 'uk-UA'\n            ? 'Немає інформації'\n            : 'No information added'}\n        </ReviewNot>\n      ) : (\n        <ReviewList>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <ReviewAuthor>{review.author}</ReviewAuthor>\n              <ReviewText>{review.content}</ReviewText>\n            </li>\n          ))}\n        </ReviewList>\n      )}\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n// const lang = 'en-US'; // 'uk-UA'; 'en-US'\n\nconst fetchTrends = async (lang, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array, lang) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array, lang) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["ReviewList","styled","p","theme","space","ReviewAuthor","colors","textPrimary","ReviewText","fontSizes","xs","ReviewNot","Reviews","currentLang","params","useParams","useState","reviews","setReviews","useEffect","fetchReviewsById","movieId","then","data","results","length","map","review","author","content","id","MAIN_URL","API_KEY","fetchTrends","lang","page","axios","response","fetchMovies","query","fetchMovieById","fetchCastById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","movie_id","catch","error","console","log","Promise","all","fetchActors","fetchActorById","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor","propTypes","PropTypes"],"sourceRoot":""}