{"version":3,"file":"static/js/514.19b0ae59.chunk.js","mappings":"4NAEaA,EAAaC,EAAAA,EAAAA,GAAH,gGACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIRC,EAAeJ,EAAAA,EAAAA,GAAH,6DACT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACN,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,IAGCC,EAAaP,EAAAA,EAAAA,EAAH,iFACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,EAAtB,IACJ,SAAAR,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,IAGAI,EAAYV,EAAAA,EAAAA,EAAH,8DACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACP,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,I,uCCXG,SAASK,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MAEf,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,EAAOO,SAASC,MAAK,SAAAC,GAEpCL,EAAWK,EAAKC,QACjB,GACF,GAAE,CAACV,EAAOO,UAEY,IAAnBJ,EAAQQ,QAER,+BACE,SAACb,EAAD,kCAMJ,+BACE,SAACX,EAAD,UACGgB,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,SAACrB,EAAD,UAAeqB,EAAOC,UACtB,SAACnB,EAAD,UAAakB,EAAOE,YAFbF,EAAOG,GADC,OAS1B,C,sNCvCKC,EAAW,+BACXC,EAAU,mCAKVC,EAAW,mCAAG,oGACKC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,qCACmBC,EADnB,YADL,cACZG,EADY,yBAIXA,EAASZ,MAJE,2CAAH,qDAOXa,EAAW,mCAAG,WAAOC,EAAOC,GAAd,uFACKJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCK,EADhC,gCAC6DC,EAD7D,yBADL,cACZH,EADY,yBAIXA,EAASZ,MAJE,2CAAH,wDAOXgB,EAAc,mCAAG,WAAMT,GAAN,uFACEI,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,oBACcE,EADd,oBADF,cACfG,EADe,yBAIdA,EAASZ,MAJK,2CAAH,sDAOdiB,EAAa,mCAAG,WAAMV,GAAN,uFACGI,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,4BACsBE,EADtB,oBADH,cACdG,EADc,yBAIbA,EAASZ,MAJI,2CAAH,sDAObH,EAAgB,mCAAG,WAAMU,GAAN,uFACAI,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAD,EADA,4BACsBE,EADtB,2BADA,cACjBG,EADiB,yBAIhBA,EAASZ,MAJO,2CAAH,sDAetBa,EAAYK,UAAY,CACtBJ,MAAOK,IAAAA,OACPJ,KAAMI,IAAAA,QAGRH,EAAeE,UAAY,CACzBX,GAAIY,IAAAA,QAGNF,EAAcC,UAAY,CACxBX,GAAIY,IAAAA,QAGNtB,EAAiBqB,UAAY,CAC3BX,GAAIY,IAAAA,O","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  margin-top: ${p => p.theme.space[4]}px;\n  /* padding-top: ${p => p.theme.space[3]}px; */\n  list-style: none;\n`;\n\nexport const ReviewAuthor = styled.h4`\n  margin-top: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.textPrimary};\n`;\n\nexport const ReviewText = styled.p`\n  margin-top: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.xs};\n  color:  ${p => p.theme.colors.textPrimary};\n`;\n\nexport const ReviewNot = styled.p`\n  padding-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.textPrimary};\n`;\n","import {\n  ReviewList,\n  ReviewAuthor,\n  ReviewText,\n  ReviewNot,\n} from './Reviews.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'services/api';\n\nexport default function Reviews() {\n  const params = useParams();\n  //   console.log(params);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviewsById(params.movieId).then(data => {\n      //   console.log(data.results);\n      setReviews(data.results);\n    });\n  }, [params.movieId]);\n\n  if (reviews.length === 0) {\n    return (\n      <>\n        <ReviewNot>No reviews found</ReviewNot>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ReviewList>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <ReviewAuthor>{review.author}</ReviewAuthor>\n            <ReviewText>{review.content}</ReviewText>\n          </li>\n        ))}\n      </ReviewList>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n// language=uk-UA\n\nconst fetchTrends = async () => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["ReviewList","styled","p","theme","space","ReviewAuthor","colors","textPrimary","ReviewText","fontSizes","xs","ReviewNot","Reviews","params","useParams","useState","reviews","setReviews","useEffect","fetchReviewsById","movieId","then","data","results","length","map","review","author","content","id","MAIN_URL","API_KEY","fetchTrends","axios","response","fetchMovies","query","page","fetchMovieById","fetchCastById","propTypes","PropTypes"],"sourceRoot":""}