{"version":3,"file":"static/js/547.aac75fff.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.js","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  space,\n  layout,\n  border,\n  position,\n  typography,\n  background,\n  flexbox, shadow,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  space,\n  layout,\n  border,\n  position,\n  typography,\n  background,\n  flexbox, shadow,\n);\n","// import styled from '@emotion/styled';\nimport styled from \"@emotion/styled/macro\";\n\nexport const MovieThumb = styled.div`\n  position: relative;\n  width: 160px;\n  height: 240px;\n  overflow: hidden;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background-color:  ${p => p.theme.colors.bcgTitle};\n  color:  ${p => p.theme.colors.textSecondary};\n  font-weight: 700;\n\n  transform: translateY(100%);\n  transition: transform 250ms ease;\n\n  ${MovieThumb}:hover &,\n  ${MovieThumb}:focus & {\n    transform: translateY(0);\n  }\n`;\n","// import css from './MovieCard.module.css';\nimport {\n  MovieThumb,\n  MovieImg,\n  MovieTitle,\n} from 'components/MovieCard/MovieCard.styled';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { Box } from 'components/Box/Box';\n\nexport const MovieCard = ({ movie }) => {\n  let movieYear = '';\n  if (movie.release_date ?? movie.first_air_date) {\n    movieYear = (movie.release_date ?? movie.first_air_date).slice(0, 4);\n  }\n\n  return (\n    <Box width=\"160px\" background=\"#bcc3ce\" height=\"100%\">\n      <MovieThumb>\n        <MovieImg\n          width=\"160\"\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n              : imageplaceholder\n          }\n          alt={movie.title ?? movie.name}\n        />\n        <MovieTitle>\n          <p>{movie.title ?? movie.name}</p>\n          <p>{movieYear}</p>\n        </MovieTitle>\n      </MovieThumb>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  /* justify-content: center; */\n  margin-top: 16px;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const MoviesItem = styled.li`\n  box-shadow: none;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.blackShadow};\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  margin-left: ${p => p.theme.space[1]}px;\n  font-weight: 700;\n  padding: 4px 8px;\n  color: ${p => p.theme.colors.textSecondary};\n  background-color: ${p => p.theme.colors.bcgBtn};\n  border-color: ${p => p.theme.colors.bcgBtn};\n  cursor: pointer;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 4px 8px;\n`;\n\nexport const LoadMoreBtn = styled.button`\n  margin-top: ${p => p.theme.space[4]}px;\n\n  padding: 4px 8px;\n  color: ${p => p.disabled ? \"grey\" : p.theme.colors.textSecondary};\n  background-color: ${p => p.theme.colors.bcgBtn};\n  text-decoration: none;\n  /* font-size: 16px; */\n  font-weight: 700;\n  border-color: ${p => p.theme.colors.bcgBtn};\n  cursor: ${p => p.disabled ? 'default' : 'pointer'};\n`;\n","import {\n  MoviesList,\n  MoviesItem,\n  SearchBtn,\n  SearchInput,\n  LoadMoreBtn,\n} from './Movies.styled';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport 'index.css';\nimport { NavLink } from 'react-router-dom';\nimport { Box } from 'components/Box/Box';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/api';\n\n// import Pagination from '@mui/material/Pagination';\n\nexport default function Movies() {\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [totalFound, setTotalFound] = useState(1);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('search') ?? '';\n  const currentPage = searchQuery.get('page');\n  const [page, setPage] = useState(currentPage ? Number(currentPage) : 1);\n  const [input, setInput] = useState(query ? query : '');\n  const location = useLocation();\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchMovies(query, page)\n      .then(data => {\n        if (!data.results.length) {\n          alert('No results found due to your search inquiry');\n        } else {\n          // setMoviesFound(prevState => {\n          //   return [...prevState, ...data.results];\n          // });\n          // console.log(data);\n          setTotalFound(data.total_results);\n          setTotalPages(data.total_pages);\n          setMoviesFound([...data.results]);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [page, query]);\n\n  const onSearchInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim() === '') {\n      return alert('Empty query. Please input something for search');\n    }\n    if (input.trim() !== query) {\n      setPage(1);\n      setMoviesFound([]);\n      setSearchQuery({ search: input, page: Number(page) });\n    }\n  };\n\n  const increasePage = () => {\n    setPage(prevPage => prevPage + 1);\n    setSearchQuery({ search: input, page: page + 1 });\n  };\n\n  const decreasePage = () => {\n    setPage(prevPage => prevPage - 1);\n    setSearchQuery({ search: input, page: page - 1 });\n  };\n\n  const clearAll = () => {\n    setInput('');\n    setMoviesFound([]);\n    setSearchQuery({ search: '', page: 0 });\n    setTotalPages(0);\n  };\n\n  const searchRoute = `${location.pathname}${location.search}`;\n\n  return (\n    <Box p={4} textAlign=\"center\" mt=\"48px\">\n      <form onSubmit={handleSubmit}>\n        <SearchInput type=\"text\" value={input} onChange={onSearchInput} />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n        <SearchBtn type=\"button\" onClick={clearAll}>\n          Clear\n        </SearchBtn>\n      </form>\n\n      <MoviesList>\n        {moviesFound.map(movie => (\n          <MoviesItem key={movie.id}>\n            <NavLink to={`${movie.id}`} state={{ from: searchRoute }}>\n              <MovieCard movie={movie} />\n            </NavLink>\n          </MoviesItem>\n        ))}\n      </MoviesList>\n\n      {/* <Box py={3} display=\"flex\" justifyContent=\"center\">\n        {totalPages > 0 && (\n          <Pagination\n            count={totalPages}\n            page={Number(currentPage)}\n            onChange={(_, num) => {\n              setSearchQuery({ search: input, page: Number(num) });\n              setPage(num);\n            }}\n            siblingCount={1}\n            boundaryCount={2}\n            color=\"primary\"\n            showFirstButton\n            showLastButton\n          />\n        )}\n      </Box> */}\n\n      {moviesFound.length > 0 && moviesFound.length < totalFound && (\n        <>\n          <LoadMoreBtn\n            type=\"button\"\n            onClick={decreasePage}\n            disabled={page === 1 ? true : false}\n          >\n            Prev Page\n          </LoadMoreBtn>\n          <LoadMoreBtn\n            type=\"button\"\n            onClick={increasePage}\n            disabled={page === totalPages ? true : false}\n          >\n            Next Page\n          </LoadMoreBtn>\n        </>\n      )}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n// language=uk-UA\n\nconst fetchTrends = async () => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["Box","styled","space","layout","border","position","typography","background","flexbox","shadow","MovieThumb","MovieImg","MovieTitle","p","theme","colors","bcgTitle","textSecondary","MovieCard","movie","movieYear","release_date","first_air_date","slice","width","height","src","poster_path","imageplaceholder","alt","title","name","MoviesList","MoviesItem","shadows","blackShadow","SearchBtn","bcgBtn","SearchInput","LoadMoreBtn","disabled","Movies","useState","moviesFound","setMoviesFound","totalFound","setTotalFound","useSearchParams","searchQuery","setSearchQuery","query","get","currentPage","Number","page","setPage","input","setInput","location","useLocation","totalPages","setTotalPages","useEffect","fetchMovies","then","data","results","length","total_results","total_pages","alert","catch","error","console","log","searchRoute","pathname","search","textAlign","mt","onSubmit","event","preventDefault","trim","type","value","onChange","target","onClick","map","to","id","state","from","prevPage","MAIN_URL","API_KEY","fetchTrends","axios","response","fetchMovieById","fetchCastById","fetchReviewsById","propTypes","PropTypes"],"sourceRoot":""}