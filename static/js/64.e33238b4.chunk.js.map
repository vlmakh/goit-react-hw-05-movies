{"version":3,"file":"static/js/64.e33238b4.chunk.js","mappings":"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","sources":["pages/Actors/Actors.styled.jsx","pages/Actors/Actors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport bcgImage from 'images/bcg-actors01.jpg';\n\nexport const Background = styled.div`\n  margin: ${p => p.theme.space[4]}px auto 0;\n  max-width: 1280px;\n  height: 720px;\n  background-image: radial-gradient(\n      at center,\n      rgba(59, 67, 81, 0.2),\n      ${p => p.theme.colors.bcgMain} 70%\n    ),\n    url(${bcgImage});\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n`;\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: center;\n  margin-top: 16px;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const ActorsPerson = styled.li`\n  box-shadow: none;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.blackShadow};\n  }\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin: 0 auto;\n  max-width: 400px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  padding: 4px 8px;\n\n  &:hover + button {\n    color: ${p => p.theme.colors.bcgBtn};\n  }\n`;\n","import {\n  ActorsList,\n  ActorsPerson,\n  SearchInput,\n  Background,\n  SearchForm,\n} from './Actors.styled';\nimport { SearchBtn, ClearBtn, LoadMoreBtn } from 'components/Buttons/Buttons';\nimport { ActorCard } from 'components/ActorCard/ActorCard';\nimport 'index.css';\nimport { NavLink } from 'react-router-dom';\nimport { Box } from 'components/Box/Box';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchActors } from 'services/api';\nimport { IoIosCloseCircle } from 'react-icons/io';\n\nexport default function Movies({ currentLang }) {\n  const [actorsFound, setActorsFound] = useState([]);\n  const [totalFound, setTotalFound] = useState(1);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('search' ?? '');\n  const currentPage = searchQuery.get('page' ?? '');\n  const [page, setPage] = useState(currentPage ? Number(currentPage) : 1);\n  const [input, setInput] = useState(query ? query : '');\n  const location = useLocation();\n  // console.log(location);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchActors(query, page, currentLang)\n      .then(data => {\n        if (!data.results.length) {\n          alert('No results found due to your search inquiry');\n        } else {\n          // setactorsFound(prevState => {\n          //   return [...prevState, ...data.results];\n          // });\n          // console.log(data.results);\n          setTotalFound(data.total_results);\n          setTotalPages(data.total_pages);\n          setActorsFound([...data.results]);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [currentLang, page, query]);\n\n  const onSearchInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim() === '') {\n      return alert('Empty query. Please input something for search');\n    }\n    if (input.trim() !== query) {\n      setPage(1);\n      setActorsFound([]);\n      setSearchQuery({ search: input, page: Number(page) });\n    }\n  };\n\n  const increasePage = () => {\n    setPage(prevPage => prevPage + 1);\n    setSearchQuery({ search: input, page: page + 1 });\n  };\n\n  const decreasePage = () => {\n    setPage(prevPage => prevPage - 1);\n    setSearchQuery({ search: input, page: page - 1 });\n  };\n\n  const clearAll = () => {\n    setInput('');\n    setActorsFound([]);\n    setSearchQuery({ search: '', page: 0 });\n    setTotalPages(0);\n  };\n\n  return (\n    <Box p={4} textAlign=\"center\" mt=\"48px\">\n      <SearchForm onSubmit={handleSubmit}>\n        <Box position=\"relative\" flexGrow=\"1\">\n          <SearchInput\n            type=\"text\"\n            value={input}\n            onChange={onSearchInput}\n            placeholder={currentLang === 'uk-UA' ? \"Ім'я\" : 'Name'}\n          />\n          <ClearBtn type=\"button\" onClick={clearAll}>\n            <IoIosCloseCircle size=\"20\" />\n          </ClearBtn>\n        </Box>\n        <SearchBtn type=\"submit\">\n          {currentLang === 'uk-UA' ? 'Пошук' : 'Search'}\n        </SearchBtn>\n      </SearchForm>\n\n      {actorsFound.length === 0 && <Background />}\n\n      <ActorsList>\n        {actorsFound.map(actor => (\n          <ActorsPerson key={actor.id}>\n            <NavLink to={`${actor.id}`} state={{ from: location }}>\n              <ActorCard actor={actor} />\n            </NavLink>\n          </ActorsPerson>\n        ))}\n      </ActorsList>\n\n      {actorsFound.length > 0 && actorsFound.length < totalFound && (\n        <>\n          <LoadMoreBtn\n            type=\"button\"\n            onClick={decreasePage}\n            disabled={page === 1 ? true : false}\n          >\n            {currentLang === 'uk-UA' ? 'Назад' : 'Prev page'}\n          </LoadMoreBtn>\n          <LoadMoreBtn\n            type=\"button\"\n            onClick={increasePage}\n            disabled={page === totalPages ? true : false}\n          >\n            {currentLang === 'uk-UA' ? 'Далі' : 'Next page'}\n          </LoadMoreBtn>\n        </>\n      )}\n    </Box>\n  );\n}\n"],"names":["Background","styled","p","theme","space","colors","bcgMain","bcgImage","ActorsList","ActorsPerson","shadows","blackShadow","SearchForm","SearchInput","bcgBtn","Movies","currentLang","useState","actorsFound","setActorsFound","totalFound","setTotalFound","useSearchParams","searchQuery","setSearchQuery","query","get","currentPage","Number","page","setPage","input","setInput","location","useLocation","totalPages","setTotalPages","useEffect","fetchActors","then","data","results","length","total_results","total_pages","alert","catch","error","console","log","Box","textAlign","mt","onSubmit","event","preventDefault","trim","search","position","flexGrow","type","value","onChange","target","placeholder","onClick","size","map","actor","to","id","state","from","ActorCard","prevPage","disabled"],"sourceRoot":""}