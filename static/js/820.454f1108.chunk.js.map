{"version":3,"file":"static/js/820.454f1108.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.js","pages/Home/Home.styled.jsx","pages/Home/Home.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  space,\n  layout,\n  border,\n  position,\n  typography,\n  background,\n  flexbox, shadow,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  space,\n  layout,\n  border,\n  position,\n  typography,\n  background,\n  flexbox, shadow,\n);\n","// import styled from '@emotion/styled';\nimport styled from \"@emotion/styled/macro\";\n\nexport const MovieThumb = styled.div`\n  position: relative;\n  width: 160px;\n  height: 240px;\n  overflow: hidden;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background-color:  ${p => p.theme.colors.bcgTitle};\n  color:  ${p => p.theme.colors.textSecondary};\n  font-weight: 700;\n\n  transform: translateY(100%);\n  transition: transform 250ms ease;\n\n  ${MovieThumb}:hover &,\n  ${MovieThumb}:focus & {\n    transform: translateY(0);\n  }\n`;\n","// import css from './MovieCard.module.css';\nimport {\n  MovieThumb,\n  MovieImg,\n  MovieTitle,\n} from 'components/MovieCard/MovieCard.styled';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { Box } from 'components/Box/Box';\n\nexport const MovieCard = ({ movie }) => {\n  let movieYear = '';\n  if (movie.release_date ?? movie.first_air_date) {\n    movieYear = (movie.release_date ?? movie.first_air_date).slice(0, 4);\n  }\n\n  return (\n    <Box width=\"160px\" background=\"#bcc3ce\" height=\"100%\">\n      <MovieThumb>\n        <MovieImg\n          width=\"160\"\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n              : imageplaceholder\n          }\n          alt={movie.title ?? movie.name}\n        />\n        <MovieTitle>\n          <p>{movie.title ?? movie.name}</p>\n          <p>{movieYear}</p>\n        </MovieTitle>\n      </MovieThumb>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HomeTitle = styled.h2`\n  color: ${p => p.theme.colors.textPrimary}\n`\n\nexport const TrendsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: center; */\n  /* margin-top: 16px; */\n  gap: ${p => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const TrendsItem = styled.li`\n  box-shadow: none;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.blackShadow};\n  }\n`;\n","import { Box } from 'components/Box/Box';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchTrends } from 'services/api';\nimport { HomeTitle, TrendsList, TrendsItem } from './Home.styled';\nimport 'index.css';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\nexport default function Home() {\n  const [trends, setTrends] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrends().then(data => {\n      // console.log(data);\n      setTrends(data.results);\n    });\n  }, []);\n\n  return (\n    <Box p={3} mt=\"48px\" textAlign=\"center\">\n      <HomeTitle>Trending Today</HomeTitle>\n\n      <TrendsList>\n        {trends.map(trend => (\n          <TrendsItem key={trend.id}>\n            <NavLink to={`movies/${trend.id}`} state={{ from: location }}>\n              <MovieCard movie={trend} />\n            </NavLink>\n          </TrendsItem>\n        ))}\n      </TrendsList>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n// language=uk-UA\n\nconst fetchTrends = async () => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["Box","styled","space","layout","border","position","typography","background","flexbox","shadow","MovieThumb","MovieImg","MovieTitle","p","theme","colors","bcgTitle","textSecondary","MovieCard","movie","movieYear","release_date","first_air_date","slice","width","height","src","poster_path","imageplaceholder","alt","title","name","HomeTitle","textPrimary","TrendsList","TrendsItem","shadows","blackShadow","Home","useState","trends","setTrends","location","useLocation","useEffect","fetchTrends","then","data","results","mt","textAlign","map","trend","to","id","state","from","MAIN_URL","API_KEY","axios","response","fetchMovies","query","page","fetchMovieById","fetchCastById","fetchReviewsById","propTypes","PropTypes"],"sourceRoot":""}