{"version":3,"file":"static/js/716.56f382d7.chunk.js","mappings":"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","sources":["components/Trailer/Trailer.styled.jsx","components/Trailer/Trailer.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n// export const Trailer = styled.div`\n//   display: flex;\n//   flex-wrap: wrap;\n//   margin-top: ${p => p.theme.space[4]}px;\n//   gap: ${p => p.theme.space[3]}px;\n//   list-style: none;\n// `;\n\nexport const Text = styled.p`\n  margin-top: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.textPrimary};\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieTrailer } from 'services/api';\nimport { Box } from 'components/Box/Box';\nimport { Text } from './Trailer.styled';\n\nexport default function Trailer({ currentLang }) {\n  const params = useParams();\n  //   console.log(params);\n  const [trailer, setTrailer] = useState('plugtext');\n  //   console.log(trailer);\n  const notFound =\n    currentLang === 'uk-UA' ? 'Не знайдено' : 'No information found';\n\n  useEffect(() => {\n    fetchMovieTrailer(params.movieId, currentLang).then(data => {\n      //   console.log(data.results);\n\n      const objTrailer = data.results.find(movie => movie.type === 'Trailer');\n\n      if (!objTrailer) {\n        setTrailer('');\n        return;\n      }\n\n      setTrailer(`https://www.youtube.com/embed/${objTrailer.key}`);\n    });\n  }, [currentLang, params.movieId, trailer]);\n\n  return (\n    <Box mt={4}>\n      {!trailer ? (\n        <Text>{notFound}</Text>\n      ) : (\n        <iframe\n          width=\"640\"\n          height=\"360\"\n          src={trailer}\n          title={trailer}\n          frameBorder=\"0\"\n          allowFullScreen\n        />\n      )}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n// const lang = 'en-US'; // 'uk-UA'; 'en-US'\n\nconst fetchTrends = async (lang, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array, lang) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array, lang) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["Text","styled","p","theme","space","fontSizes","s","colors","textPrimary","Trailer","currentLang","params","useParams","useState","trailer","setTrailer","notFound","useEffect","fetchMovieTrailer","movieId","then","data","objTrailer","results","find","movie","type","key","Box","mt","width","height","src","title","frameBorder","allowFullScreen","MAIN_URL","API_KEY","fetchTrends","lang","page","axios","response","fetchMovies","query","fetchMovieById","id","fetchCastById","fetchReviewsById","fetchLibraryMovies","array","arrayOfMovies","map","movie_id","catch","error","console","log","Promise","all","fetchActors","fetchActorById","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor","propTypes","PropTypes"],"sourceRoot":""}