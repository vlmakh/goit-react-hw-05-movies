{"version":3,"file":"static/js/554.1e028499.chunk.js","mappings":"oOAGaA,EAAYC,EAAAA,EAAAA,GAAH,wHAGN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACR,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIGC,EAAYJ,EAAAA,EAAAA,GAAH,6IAOJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,QAAQC,WAApB,IAONC,GAAgBP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,kD,iDCnBX,SAASS,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,YAC9BC,GAASC,EAAAA,EAAAA,MAEf,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBR,EAAOS,QAASV,GAAaW,MAAK,SAAAC,GAEnDP,EAAUO,EAAKC,KAChB,GACF,GAAE,CAACb,EAAaC,EAAOS,WAGtB,+BACE,SAACrB,EAAD,UACGe,EAAOU,KAAI,SAAAC,GAAK,OACf,SAACrB,EAAD,WACE,SAACG,EAAD,CACEmB,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMb,GAFjB,UAIE,SAACc,EAAA,EAAD,CAAWL,MAAOA,OALNA,EAAME,GADP,OAaxB,C","sources":["components/ActorMovies/ActorMovies.styled.jsx","components/ActorMovies/ActorMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink} from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: ${p => p.theme.space[4]}px;\n  gap: ${p => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  box-shadow: none;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.blackShadow};\n  }\n\n`;\n\n\n\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n`","import { MovieList, MovieItem, StyledNavLink } from './ActorMovies.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchMoviesByActor } from 'services/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\nexport default function ActorMovies({ currentLang }) {\n  const params = useParams();\n  // console.log(params.actorId);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMoviesByActor(params.actorId, currentLang).then(data => {\n      // console.log(data.cast);\n      setMovies(data.cast);\n    });\n  }, [currentLang, params.actorId]);\n\n  return (\n    <>\n      <MovieList>\n        {movies.map(movie => (\n          <MovieItem key={movie.id}>\n            <StyledNavLink\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              <MovieCard movie={movie} />\n            </StyledNavLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </>\n  );\n}\n"],"names":["MovieList","styled","p","theme","space","MovieItem","shadows","blackShadow","StyledNavLink","NavLink","ActorMovies","currentLang","params","useParams","useState","movies","setMovies","location","useLocation","useEffect","fetchMoviesByActor","actorId","then","data","cast","map","movie","to","id","state","from","MovieCard"],"sourceRoot":""}