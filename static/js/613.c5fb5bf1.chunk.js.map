{"version":3,"file":"static/js/613.c5fb5bf1.chunk.js","mappings":"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","sources":["components/ActorImages/ActorImages.styled.jsx","components/ActorImages/ActorImages.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const ImageList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: ${p => p.theme.space[4]}px;\n  gap: ${p => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const ImageCard = styled.li`\n  width: 100px;\n  /* padding-bottom: ${p => p.theme.space[2]}px; */\n  background-color: ${p => p.theme.colors.textPrimary};\n`;\n\nexport const ImageImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\n\n","import { ImageList, ImageCard, ImageImg } from './ActorImages.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchImagesByActor } from 'services/api';\nimport imageplaceholder from 'images/nophoto.jpg';\n\nexport default function ActorImages() {\n  const params = useParams();\n  // console.log(params.actorId);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    fetchImagesByActor(params.actorId).then(data => {\n      // console.log(data);\n      setImages(data.profiles);\n    });\n  }, [params.actorId]);\n\n  return (\n    <>\n      <ImageList>\n        {images.map(image => (\n          <ImageCard key={image.file_path}>\n            <ImageImg\n              width=\"100\"\n              src={\n                image.file_path\n                  ? `https://image.tmdb.org/t/p/w200${image.file_path}`\n                  : imageplaceholder\n              }\n              alt=\"photo\"\n            />\n          </ImageCard>\n        ))}\n      </ImageList>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n// const lang = 'en-US'; // 'uk-UA'; 'en-US'\n\nconst fetchTrends = async lang => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchActors = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchMoviesByActor = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchActors,\n  fetchActorById,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["ImageList","styled","p","theme","space","ImageCard","colors","textPrimary","ImageImg","ActorImages","params","useParams","useState","images","setImages","useEffect","fetchImagesByActor","actorId","then","data","profiles","map","image","width","src","file_path","imageplaceholder","alt","MAIN_URL","API_KEY","fetchTrends","lang","axios","response","fetchMovies","query","page","fetchMovieById","id","fetchCastById","fetchReviewsById","fetchActors","fetchActorById","fetchMoviesByActor","propTypes","PropTypes"],"sourceRoot":""}