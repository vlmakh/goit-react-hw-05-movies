{"version":3,"file":"static/js/617.7a32ddc1.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.jsx","components/Modal/Modal.js","pages/ActorPage/ActorPage.styled.jsx","services/formatDate.js","pages/ActorPage/ActorPage.js","pages/Home/Home.styled.jsx","pages/PageError/PageError.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  width: 500px;\n  max-height: calc(100vh - 24px);\n  overflow-y: clip;\n  overflow-x: visible;  \n\n @media (max-width: 480px) {\n    width: 100%;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Overlay, ModalWindow } from './Modal.styled';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const ActorImg = styled.img`\n  cursor: pointer;\n`;\n\nexport const ActorDescr = styled.p`\n  margin-top: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.textPrimary};\n`;\n","import { format } from 'date-fns';\nimport { uk } from 'date-fns/locale';\n\nexport const formatDateEn = date => {\n  if (date) {\n    return format(Date.parse(date), 'MMMM dd, yyyy');\n  }\n};\n\nexport const formatDateUa = date => {\n  if (date) {\n    return format(Date.parse(date), 'dd MMMM yyyy', { locale: uk });\n  }\n};\n","import { ActorImg, ActorDescr } from './ActorPage.styled';\nimport { Name } from 'pages/Home/Home.styled';\nimport { StyledBtn, StyledLinkBtn } from 'components/Buttons/Buttons';\nimport { PageWrap, Box, Container, BtnContainer } from 'components/Box/Box';\nimport { useState, useEffect, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchActorById } from 'services/api';\nimport PageError from 'pages/PageError/PageError';\nimport Modal from 'components/Modal/Modal';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { formatDateEn, formatDateUa } from 'services/formatDate';\nimport { Suspense } from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\n\nexport default function ActorPage({\n  actors,\n  currentLang,\n  toggleActorsInAlbum,\n}) {\n  const [personInfo, setPersonInfo] = useState(null);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const params = useParams();\n  const [saved, setSaved] = useState(\n    actors.includes(params.actorId) ? true : false\n  );\n  const backLink = useRef(location.state?.from ?? '/');\n  // console.log(location);\n  const [showModal, setShowModal] = useState(false);\n  const textSave = currentLang === 'uk-UA' ? 'Зберегти' : 'Save';\n  const textSaved = currentLang === 'uk-UA' ? 'Збережено' : 'Saved';\n  const textBack = currentLang === 'uk-UA' ? 'Назад' : 'Back';\n  const textHome = currentLang === 'uk-UA' ? 'Старт' : 'Home';\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    fetchActorById(params.actorId, currentLang)\n      .then(data => {\n        setPersonInfo(data);\n        // console.log(data);\n      })\n      .catch(error => {\n        // console.log(error.message);\n        // alert(error.message);\n        setError(true);\n      });\n  }, [currentLang, params.actorId]);\n\n  const toggleSaveBtn = () => {\n    setSaved(!saved);\n  };\n\n  const handleSaveToAlbum = () => {\n    toggleActorsInAlbum(params.actorId);\n    toggleSaveBtn();\n  };\n\n  return (\n    <PageWrap>\n      <StyledLinkBtn to={backLink.current}>\n        {!backLink.current.pathname ? textHome : textBack}\n      </StyledLinkBtn>\n\n      {error && <PageError />}\n\n      {personInfo && (\n        <>\n          <Name>{personInfo.name}</Name>\n          <Container>\n            <Box\n              width=\"200px\"\n              height=\"300px\"\n              boxShadow=\"0 0 8px rgba(0, 0, 0, 0.6)\"\n              // overflow=\"hidden\"\n            >\n              <ActorImg\n                width=\"200\"\n                height=\"100%\"\n                src={\n                  personInfo.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${personInfo.profile_path}`\n                    : imageplaceholder\n                }\n                alt={`${personInfo.name}`}\n                onClick={toggleModal}\n              />\n            </Box>\n\n            <Box>\n              {personInfo.birthday && (\n                <ActorDescr>\n                  {currentLang === 'uk-UA'\n                    ? `Дата народження: ${formatDateUa(personInfo.birthday)}`\n                    : `Birth date: ${formatDateEn(personInfo.birthday)}`}\n                </ActorDescr>\n              )}\n              {personInfo.deathday && (\n                <ActorDescr>\n                  {currentLang === 'uk-UA'\n                    ? `Дата смерті: ${formatDateUa(personInfo.deathday)}`\n                    : `Death date: ${formatDateEn(personInfo.deathday)}`}\n                </ActorDescr>\n              )}\n\n              <BtnContainer>\n                <StyledLinkBtn to=\"biography\" state={personInfo.biography}>\n                  {currentLang === 'uk-UA' ? 'Біографія' : 'Biography'}\n                </StyledLinkBtn>\n                <StyledLinkBtn to=\"movies\">\n                  {currentLang === 'uk-UA' ? 'Фільми' : 'Movies'}\n                </StyledLinkBtn>\n                <StyledLinkBtn to=\"images\">\n                  {currentLang === 'uk-UA' ? 'Фото' : 'Photos'}\n                </StyledLinkBtn>\n                <StyledBtn onClick={handleSaveToAlbum} saved={saved}>\n                  {saved ? textSaved : textSave}\n                </StyledBtn>\n              </BtnContainer>\n\n              <Suspense\n                fallback={\n                  <Box pt={6} pl={6}>\n                    <ThreeCircles\n                      height=\"100\"\n                      width=\"100\"\n                      color=\"#bcc3ce\"\n                      ariaLabel=\"Three-Circles-rotating\"\n                      visible={true}\n                    />\n                  </Box>\n                }\n              >\n                <Outlet />\n              </Suspense>\n            </Box>\n          </Container>\n\n          {showModal && (\n            <Modal onClose={toggleModal}>\n              <img\n                width=\"100%\"\n                src={\n                  personInfo.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${personInfo.profile_path}`\n                    : imageplaceholder\n                }\n                alt={personInfo.name}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n    </PageWrap>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Name = styled.h1`\n  margin-top: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  color: ${p => p.theme.colors.textTitle};\n  text-align: center;\n`;\n\nexport const PageTitle = styled.h2`\n  color: ${p => p.theme.colors.textPrimary};\n  text-align: center;\n`\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${p => p.theme.space[4]}px;\n  gap: ${p => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  box-shadow: none;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.blackShadow};\n  }\n`;\n","import { PageWrap, Box } from 'components/Box/Box';\n// import { ErrorDescr } from './PageError.styled';\nimport errorImage from 'images/error-404.jpg';\n\nexport default function PageError({ currentLang }) {\n  // console.log(currentLang);\n\n  // const errorMsg =\n  //   currentLang === 'uk-UA'\n  //     ? 'Щось пішло не так, схоже інформація відсутня, спробуйте пізніше...'\n  //     : \"Something's wrong... probably information isn't added yet, please try later\";\n\n  return (\n    <PageWrap>\n      {/* <ErrorDescr>{errorMsg}</ErrorDescr> */}\n      <Box maxWidth=\"800px\" mx=\"auto\">\n        <img src={errorImage} alt=\"error 404\" width=\"100%\" />\n      </Box>\n    </PageWrap>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n// const lang = 'en-US'; // 'uk-UA'; 'en-US'\n\nconst fetchTrends = async (lang, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array, lang) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array, lang) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["Overlay","styled","ModalWindow","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleEscape","removeEventListener","event","code","createPortal","onClick","currentTarget","target","ActorImg","ActorDescr","p","theme","space","colors","textPrimary","formatDateEn","date","format","Date","parse","formatDateUa","locale","uk","ActorPage","actors","currentLang","toggleActorsInAlbum","useState","personInfo","setPersonInfo","error","setError","location","useLocation","params","useParams","includes","actorId","saved","setSaved","backLink","useRef","state","from","showModal","setShowModal","textSave","textSaved","textBack","textHome","toggleModal","fetchActorById","then","data","catch","to","current","pathname","PageError","name","Box","width","height","boxShadow","src","profile_path","imageplaceholder","alt","birthday","deathday","biography","Suspense","fallback","pt","pl","color","ariaLabel","visible","Name","fontSizes","l","textTitle","PageTitle","List","Item","shadows","blackShadow","maxWidth","mx","errorImage","MAIN_URL","API_KEY","fetchTrends","lang","page","axios","response","fetchMovies","query","fetchMovieById","id","fetchCastById","fetchReviewsById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","map","movie_id","console","log","Promise","all","fetchActors","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor","propTypes","PropTypes"],"sourceRoot":""}