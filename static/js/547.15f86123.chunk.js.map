{"version":3,"file":"static/js/547.15f86123.chunk.js","mappings":"mNAGaA,GAAmBC,EAAAA,EAAAA,GAAOC,IAAPD,CAAH,gYAKd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IAIH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,WAAnB,IAKC,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,MAAnB,IAKH,SAAAN,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,MAAnB,G,kICnBDC,EAAaT,EAAAA,EAAAA,IAAH,uRACX,SAAAE,GAAC,OAAIA,EAAEC,MAAMO,MAAM,EAAlB,IAML,SAAAR,GAAC,OAAIA,EAAEC,MAAMG,OAAOK,OAAnB,GAECC,GAKGC,EAAab,EAAAA,EAAAA,GAAH,mJAMd,SAAAE,GAAC,OAAIA,EAAEC,MAAMO,MAAM,EAAlB,IAGGI,EAAad,EAAAA,EAAAA,GAAH,2IAOL,SAAAE,GAAC,OAAIA,EAAEC,MAAMY,QAAQC,WAApB,IAINC,EAAajB,EAAAA,EAAAA,KAAH,kFAMVkB,EAAclB,EAAAA,EAAAA,MAAH,2GAKX,SAAAE,GAAC,OAAIA,EAAEC,MAAMG,OAAOa,MAAnB,I,4GC9BC,SAASC,EAAT,GAAkC,IAAD,IAAfC,EAAe,EAAfA,YAC/B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAQF,EAAYG,IAAZ,UAAgB,UAAhB,EAA4B,IACpCC,EAAcJ,EAAYG,IAAZ,UAAgB,QAAhB,EAA0B,IAC9C,GAAwBP,EAAAA,EAAAA,UAASQ,EAAcC,OAAOD,GAAe,GAArE,eAAOE,EAAP,KAAaC,EAAb,KACA,GAA0BX,EAAAA,EAAAA,UAASM,GAAgB,IAAnD,eAAOM,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAoCf,EAAAA,EAAAA,UAAS,GAA7C,eAAOgB,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACHZ,IAILa,EAAAA,EAAAA,IAAYb,EAAOI,EAAMX,GACtBqB,MAAK,SAAAC,GACCA,EAAKC,QAAQC,QAIhBN,EAAcI,EAAKG,aACnBtB,GAAe,OAAImB,EAAKC,WAJxBG,MAAM,8CAMT,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAAC5B,EAAaW,EAAMJ,IA+BvB,OACE,UAACwB,EAAA,GAAD,CAAKlD,EAAG,EAAGmD,UAAU,SAASC,GAAG,OAAjC,WACE,UAACrC,EAAD,CAAYsC,SA3BK,SAAAC,GAEnB,GADAA,EAAMC,iBACe,KAAjBvB,EAAMwB,OACR,OAAOX,MAAM,kDAEXb,EAAMwB,SAAW9B,IACnBK,EAAQ,GACRT,EAAe,IACfG,EAAe,CAAEgC,OAAQzB,EAAOF,KAAMD,OAAOC,KAEhD,EAiBG,WACE,UAACoB,EAAA,GAAD,CAAKQ,SAAS,WAAWC,SAAS,IAAlC,WACE,SAAC3C,EAAD,CACE4C,KAAK,OACLC,MAAO7B,EACP8B,SApCY,SAAAR,GACpBrB,EAASqB,EAAMS,OAAOF,MACvB,EAmCSG,YAA6B,UAAhB7C,EAA0B,sEAAiB,UAE1D,SAAC,KAAD,CAAUyC,KAAK,SAASK,QAvBf,WACfhC,EAAS,IACTX,EAAe,IACfG,EAAe,CAAEgC,OAAQ,GAAI3B,KAAM,IACnCO,EAAc,EACf,EAkBO,UACE,SAAC,MAAD,CAAkB6B,KAAK,aAG3B,SAAC,KAAD,CAAWN,KAAK,SAAhB,SACmB,UAAhBzC,EAA0B,iCAAU,cAIjB,IAAvBE,EAAYsB,SAAgB,SAACpC,EAAD,KAE7B,SAACI,EAAD,UACGU,EAAY8C,KAAI,SAAAC,GAAK,OACpB,SAACxD,EAAD,WACE,SAAC,KAAD,CAASyD,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMtC,GAA3C,UACE,SAACuC,EAAA,EAAD,CAAWL,MAAOA,OAFLA,EAAME,GADH,OASxB,SAACI,EAAA,EAAD,CACEC,WAAW,MACXC,UAAU,IACVC,aAxCkB,SAAAC,GAEtB/C,EAAQ+C,EAAEC,SAAW,GACrBtD,EAAe,CAAEgC,OAAQzB,EAAOF,KAAMgD,EAAEC,SAAW,GACpD,EAqCKC,mBAAoB,EACpBC,UAAW7C,EACX8C,cAAc,IACdC,sBAAuB,KACvBC,sBAAsB,WACtBC,gBAAgB,iBAIvB,C","sources":["components/Pagination/Pagination.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  margin-top: 16px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: 700;\n\n  & li {\n    color: ${p => p.theme.colors.textPrimary};\n\n    transition: color 250ms linear;\n\n    :hover:not(.disabled) {\n      color: ${p => p.theme.colors.accent};\n    }\n  }\n\n  & .activePage {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  & a {\n    padding: 0 8px;\n    cursor: pointer;\n  }\n`;\n","import styled from '@emotion/styled';\nimport bcgImage from 'images/bcg-movies01.jpg';\n\nexport const Background = styled.div`\n  margin: ${p => p.theme.space[4]}px auto 0;\n  max-width: 1280px;\n  height: 720px;\n  background-image: radial-gradient(\n      at center,\n      rgba(59, 67, 81, 0.2),\n      ${p => p.theme.colors.bcgMain} 70%\n    ),\n    url(${bcgImage});\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: center;\n  margin-top: 16px;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const MoviesItem = styled.li`\n  box-shadow: none;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.blackShadow};\n  }\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin: 0 auto;\n  max-width: 400px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  padding: 4px 8px;\n\n  &:hover + button {\n    color: ${p => p.theme.colors.bcgBtn};\n  }\n`;\n\n","import {\n  MoviesList,\n  MoviesItem,\n  SearchForm,\n  SearchInput,\n  Background,\n} from './Movies.styled';\nimport { SearchBtn, ClearBtn } from 'components/Buttons/Buttons';\nimport { PaginationStyled } from 'components/Pagination/Pagination';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport 'index.css';\nimport { NavLink } from 'react-router-dom';\nimport { Box } from 'components/Box/Box';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/api';\nimport { IoIosCloseCircle } from 'react-icons/io';\n\nexport default function Movies({ currentLang }) {\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('search' ?? '');\n  const currentPage = searchQuery.get('page' ?? '');\n  const [page, setPage] = useState(currentPage ? Number(currentPage) : 1);\n  const [input, setInput] = useState(query ? query : '');\n  const location = useLocation();\n  // console.log(location);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchMovies(query, page, currentLang)\n      .then(data => {\n        if (!data.results.length) {\n          alert('No results found due to your search inquiry');\n        } else {\n          // console.log(data.results);\n          setTotalPages(data.total_pages);\n          setMoviesFound([...data.results]);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [currentLang, page, query]);\n\n  const onSearchInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim() === '') {\n      return alert('Empty query. Please input something for search');\n    }\n    if (input.trim() !== query) {\n      setPage(1);\n      setMoviesFound([]);\n      setSearchQuery({ search: input, page: Number(page) });\n    }\n  };\n\n  const clearAll = () => {\n    setInput('');\n    setMoviesFound([]);\n    setSearchQuery({ search: '', page: 0 });\n    setTotalPages(0);\n  };\n\n  const handlePageClick = e => {\n    // console.log(e);\n    setPage(e.selected + 1);\n    setSearchQuery({ search: input, page: e.selected + 1 });\n  };\n\n  return (\n    <Box p={4} textAlign=\"center\" mt=\"48px\">\n      <SearchForm onSubmit={handleSubmit}>\n        <Box position=\"relative\" flexGrow=\"1\">\n          <SearchInput\n            type=\"text\"\n            value={input}\n            onChange={onSearchInput}\n            placeholder={currentLang === 'uk-UA' ? 'Назва фільму' : 'Film'}\n          />\n          <ClearBtn type=\"button\" onClick={clearAll}>\n            <IoIosCloseCircle size=\"20\" />\n          </ClearBtn>\n        </Box>\n        <SearchBtn type=\"submit\">\n          {currentLang === 'uk-UA' ? 'Пошук' : 'Search'}\n        </SearchBtn>\n      </SearchForm>\n\n      {moviesFound.length === 0 && <Background />}\n\n      <MoviesList>\n        {moviesFound.map(movie => (\n          <MoviesItem key={movie.id}>\n            <NavLink to={`${movie.id}`} state={{ from: location }}>\n              <MovieCard movie={movie} />\n            </NavLink>\n          </MoviesItem>\n        ))}\n      </MoviesList>\n\n      <PaginationStyled\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={5}\n        pageCount={totalPages}\n        previousLabel=\"<\"\n        renderOnZeroPageCount={null}\n        disabledLinkClassName=\"disabled\"\n        activeClassName=\"activePage\"\n      />\n    </Box>\n  );\n}\n"],"names":["PaginationStyled","styled","ReactPaginate","p","theme","fontSizes","s","colors","textPrimary","accent","Background","space","bcgMain","bcgImage","MoviesList","MoviesItem","shadows","blackShadow","SearchForm","SearchInput","bcgBtn","Movies","currentLang","useState","moviesFound","setMoviesFound","useSearchParams","searchQuery","setSearchQuery","query","get","currentPage","Number","page","setPage","input","setInput","location","useLocation","totalPages","setTotalPages","useEffect","fetchMovies","then","data","results","length","total_pages","alert","catch","error","console","log","Box","textAlign","mt","onSubmit","event","preventDefault","trim","search","position","flexGrow","type","value","onChange","target","placeholder","onClick","size","map","movie","to","id","state","from","MovieCard","Pagination","breakLabel","nextLabel","onPageChange","e","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","disabledLinkClassName","activeClassName"],"sourceRoot":""}