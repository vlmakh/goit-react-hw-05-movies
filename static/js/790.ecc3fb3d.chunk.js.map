{"version":3,"file":"static/js/790.ecc3fb3d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.js","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie__img\":\"MovieCard_movie__img__Y1i+g\",\"movie__thumb\":\"MovieCard_movie__thumb__ESWNm\",\"movie__title\":\"MovieCard_movie__title__Lfihi\",\"overlay__title\":\"MovieCard_overlay__title__vSsL6\"};","import css from './MovieCard.module.css';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { Box } from 'components/Box/Box';\n\nexport const MovieCard = ({ movie }) => {\n  let movieYear = '';\n  if (movie.release_date ?? movie.first_air_date) {\n    movieYear = (movie.release_date ?? movie.first_air_date).slice(0, 4);\n  }\n\n  return (\n    <Box width=\"160px\" background=\"#bcc3ce\" height=\"100%\">\n      <div className={css.movie__thumb}>\n        <img\n          className={css.movie__img}\n          width=\"160\"\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n              : imageplaceholder\n          }\n          alt={movie.title ?? movie.name}\n        />\n        <div className={css.overlay__title}>\n          <p>{movie.title ?? movie.name}</p>\n          <p>{movieYear}</p>\n        </div>\n      </div>\n      {/* <p className={css.movie__title}>{movie.title ?? movie.name}</p> */}\n    </Box>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Movies_search__VjLZn\",\"search__btn\":\"Movies_search__btn__bt5MA\",\"moviesList\":\"Movies_moviesList__lstJL\",\"loadmore__btn\":\"Movies_loadmore__btn__vvRVL\"};","import css from './Movies.module.css';\nimport 'index.css';\nimport { NavLink } from 'react-router-dom';\nimport { Box } from 'components/Box/Box';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport Pagination from '@mui/material/Pagination';\n\nexport default function Movies() {\n  const [moviesFound, setMoviesFound] = useState([]);\n  // const [totalFound, setTotalFound] = useState(1);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('search') ?? '';\n  const currentPage = searchQuery.get('page');\n  const [page, setPage] = useState(currentPage ? Number(currentPage) : 1);\n  const [input, setInput] = useState(query ? query : '');\n  const location = useLocation();\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchMovies(query, page)\n      .then(data => {\n        if (!data.results.length) {\n          alert('No results found due to your search inquiry');\n        } else {\n          // setMoviesFound(prevState => {\n          //   return [...prevState, ...data.results];\n          // });\n          // console.log(data);\n          // setTotalFound(data.total_results);\n          setTotalPages(data.total_pages);\n          setMoviesFound([...data.results]);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [page, query]);\n\n  const onSearchInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim() === '') {\n      return alert('Empty query. Please input something for search');\n    }\n    if (input.trim() !== query) {\n      setPage(1);\n      // setMoviesFound([]);\n      setSearchQuery({ search: input, page: Number(page) });\n    }\n  };\n\n  // const increasePage = () => {\n  //   setPage(prevPage => prevPage + 1);\n  //   setSearchQuery({ search: input, page: page + 1 });\n  // };\n\n  const clearAll = () => {\n    setInput('');\n    setMoviesFound([]);\n    setSearchQuery({ search: '', page: 1 });\n    setTotalPages(0);\n  };\n\n  const searchRoute = `${location.pathname}${location.search}`;\n\n  return (\n    <Box p={4} textAlign=\"center\" mt=\"48px\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={onSearchInput}\n          className={css.search}\n        />\n        <button type=\"submit\" className={css.search__btn}>\n          Search\n        </button>\n        <button type=\"button\" className={css.search__btn} onClick={clearAll}>\n          Clear\n        </button>\n      </form>\n\n      <ul className={css.moviesList}>\n        {moviesFound.map(movie => (\n          <li key={movie.id} className=\"item\">\n            <NavLink\n              to={`${movie.id}`}\n              state={{ from: searchRoute }}\n              className=\"link\"\n            >\n              <MovieCard movie={movie} />\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n\n      <Box py={3} display=\"flex\" justifyContent=\"center\">\n        {!!totalPages && (\n          <Pagination\n            count={totalPages}\n            page={Number(currentPage)}\n            onChange={(_, num) => {\n              setSearchQuery({ search: input, page: Number(num) });\n              setPage(num);\n            }}\n            siblingCount={1}\n            boundaryCount={2}\n            color=\"primary\"\n            showFirstButton\n            showLastButton\n          />\n        )}\n      </Box>\n\n      {/* {moviesFound.length > 0 && moviesFound.length < totalFound && (\n        <button\n          type=\"button\"\n          onClick={increasePage}\n          className={css.loadmore__btn}\n        >\n          Load More\n        </button>\n      )} */}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n// language=uk-UA\n\nconst fetchTrends = async () => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["MovieCard","movie","movieYear","release_date","first_air_date","slice","Box","width","background","height","className","css","src","poster_path","imageplaceholder","alt","title","name","Movies","useState","moviesFound","setMoviesFound","useSearchParams","searchQuery","setSearchQuery","query","get","currentPage","Number","page","setPage","input","setInput","location","useLocation","totalPages","setTotalPages","useEffect","fetchMovies","then","data","results","length","total_pages","alert","catch","error","console","log","searchRoute","pathname","search","p","textAlign","mt","onSubmit","event","preventDefault","trim","type","value","onChange","target","onClick","map","to","id","state","from","py","display","justifyContent","Pagination","count","_","num","siblingCount","boundaryCount","color","showFirstButton","showLastButton","MAIN_URL","API_KEY","fetchTrends","axios","response","fetchMovieById","fetchCastById","fetchReviewsById","propTypes","PropTypes"],"sourceRoot":""}