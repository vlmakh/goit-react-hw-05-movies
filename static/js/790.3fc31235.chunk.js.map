{"version":3,"file":"static/js/790.3fc31235.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.js","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie__img\":\"MovieCard_movie__img__Y1i+g\",\"movie__thumb\":\"MovieCard_movie__thumb__ESWNm\",\"movie__title\":\"MovieCard_movie__title__Lfihi\"};","import css from './MovieCard.module.css';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { Box } from 'components/Box/Box';\n\nexport const MovieCard = ({ movie, location }) => {\n  return (\n    <Box width=\"160px\" background=\"#bcc3ce\" height=\"100%\">\n      <div className={css.movie__thumb}>\n        <img\n          className={css.movie__img}\n          width=\"160\"\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n              : imageplaceholder\n          }\n          alt={movie.title ?? movie.name}\n        />\n      </div>\n      <p className={css.movie__title}>{movie.title ?? movie.name}</p>\n    </Box>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Movies_search__VjLZn\",\"search__btn\":\"Movies_search__btn__bt5MA\",\"moviesList\":\"Movies_moviesList__lstJL\",\"loadmore__btn\":\"Movies_loadmore__btn__vvRVL\"};","import css from './Movies.module.css';\nimport 'index.css';\nimport { NavLink } from 'react-router-dom';\nimport { Box } from 'components/Box/Box';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\nexport default function Movies() {\n  const [moviesFound, setMoviesFound] = useState([]);\n\n  const [totalFound, setTotalFound] = useState(1);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('search') ?? '';\n  const currentPage = searchQuery.get('page');\n  const [page, setPage] = useState(currentPage ? Number(currentPage) : 1);\n  const [input, setInput] = useState(query ? query : '');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchMovies(query, page)\n      .then(data => {\n        if (!data.results.length) {\n          alert('No results found due to your search inquiry');\n        } else {\n          setMoviesFound(prevState => {\n            return [...prevState, ...data.results];\n          });\n          // console.log(data);\n          setTotalFound(data.total_results);\n\n          // setMoviesFound([...data.results]);\n          // setTotalPages(data.total_pages);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [page, query]);\n\n  const onSearchInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim() === '') {\n      return alert('Empty query. Please input something for search');\n    }\n    if (input.trim() !== query) {\n      setPage(1);\n      setMoviesFound([]);\n      setSearchQuery({ search: input, page: page });\n    }\n  };\n\n  const increasePage = () => {\n    setPage(prevPage => prevPage + 1);\n    setSearchQuery({ search: input, page: page + 1 });\n  };\n\n  const clearAll = () => {\n    setInput('');\n    setMoviesFound([]);\n    setSearchQuery({ search: '', page: 1 });\n  };\n\n  const searchRoute = `${location.pathname}${location.search}`;\n\n  return (\n    <Box p={4} textAlign=\"center\" mt=\"48px\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={onSearchInput}\n          className={css.search}\n        />\n        <button type=\"submit\" className={css.search__btn}>\n          Search\n        </button>\n        <button type=\"button\" className={css.search__btn} onClick={clearAll}>\n          Clear\n        </button>\n      </form>\n\n      <ul className={css.moviesList}>\n        {moviesFound.map(movie => (\n          <li key={movie.id} className=\"item\">\n            <NavLink\n              to={`${movie.id}`}\n              state={{ from: searchRoute }}\n              className=\"link\"\n            >\n              <MovieCard movie={movie} />\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n\n      {moviesFound.length > 0 && moviesFound.length < totalFound && (\n        <button\n          type=\"button\"\n          onClick={increasePage}\n          className={css.loadmore__btn}\n        >\n          Load More\n        </button>\n      )}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\n// export const perPage = 12;\n\nconst fetchTrends = async () => {\n  // return fetch(`${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`).then(\n  //   response => response.json()\n  // );\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page) => {\n  // return fetch(\n  //   `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async id => {\n  // return fetch(\n  //   `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  // return fetch(\n  //   `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  // return fetch(\n  //   `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  // ).then(response => response.json());\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["MovieCard","movie","location","Box","width","background","height","className","css","src","poster_path","imageplaceholder","alt","title","name","Movies","useState","moviesFound","setMoviesFound","totalFound","setTotalFound","useSearchParams","searchQuery","setSearchQuery","query","get","currentPage","Number","page","setPage","input","setInput","useLocation","useEffect","fetchMovies","then","data","results","length","prevState","total_results","alert","catch","error","console","log","searchRoute","pathname","search","p","textAlign","mt","onSubmit","event","preventDefault","trim","type","value","onChange","target","onClick","map","to","id","state","from","prevPage","MAIN_URL","API_KEY","fetchTrends","axios","response","fetchMovieById","fetchCastById","fetchReviewsById","propTypes","PropTypes"],"sourceRoot":""}